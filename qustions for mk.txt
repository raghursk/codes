#################################--------------------------------------------------------- ERROR CODE --------------------#################################################################################
1 ) In array of integers as input from the user and finds the second smallest index of an element in the array. However, your program should have a time complexity of O(n), where n is the size of the array, and it should not use any sorting algorithms.
2 ) Is it possible to change the size of an array once it's declared ?
3 ) In string  input is abcd :-- output wellbe bcda--cdab-dabc using 
4 ) what happens if you attempt to perfroms artimatic opt on null opinter ?
5) wrt a program generates two random numbers and a random operation (addition, subtraction, multiplication, or division) and asks the user to solve the expression. It then checks if the user's answer is correct and provides feedback accordingly. 
6) what is deffrence btw bitwise(~) and log(NOT)
   #include <stdio.h>
    int main() {
    int x = 5;
    int bitwise_complement_x = ~x;
    printf("Bitwise complement of %d: %d\n", x, bitwise_complement_x);
    int logical_not_x = !x;
    printf("Logical NOT of %d: %d\n", x, logical_not_x);
    return 0;
}
7 ) sort the array using bitwise opt
====================================================================================
#include <stdio.h>
#define size 100
int main(int argc, char *argv[]) {
    int n, revs = 0, rem = 1, sum;

    printf("Enter the number:\n");
    scanf("%d", &n);
    while(n !=0){
    rem = n % 10;
    revs = revs * 10 + rem;
    n /= 10;
}
    printf("%d", revs);
    
    int array[size];
    int temp = revs;
    for(int i=0;i<n;i++)
    {
        int temp=revs;
        revs=array[i];
        array[i]=temp;
        printf("%d",array[i]);
    }
    return 0;
}
=================================================================================
#include<stdio.h>
struct school{
    int roll_no;
    long pn;
    char name[100];
    char school_name[100];
};
int main(int argc,char * argv[])
{
 struct school std;
 std.roll_no=1542;
 std.pn=6364259019;
 strcpy(std.name="raghavendra");
 strcpy(std.school_name="adrash vidyalaya rmsa school sedam:\n");
 // 9. Write a program in C to count the total number of vowels or consonants in a string.
#include<stdio.h>
int main()
{
    int i=0;
    char string[100];
    char vowels[10]={0};
    int count,item;
    char consonants[50]={0};
    printf("Enter the string:\n");
    scanf("%s",string);
    printf("Enter the charter:\n");
    scanf("%s",&item);
    for(i=0;string[i]!='\0';i++)
    {
        if(string[i]=='A' && string[i]=='E' && string[i]=='I' &&string[i]=='O' && string[i]=='U' || string[i]=='a' && string[i]=='e' && string[i]=='i' &&string[i]=='o' && string[i]=='u')
        {
          count[vowels]++;
        }
        if else(string[i]=='A' && string[i]=='Z'||string[i]=='a' && string[i]=='z')
        {
            count[consonants]++;
        }
    }
    printf("the char %c in vowels are %d :",item,count);
    printf("the char %c in vowels are %d :",item,count);
    

 printf("%d\n %ld\n %s\n %s\n",std.roll_no,std.pn,std.name,std.school_name);
}

===========================================================================================================


#include<stdio.h>
struct college
{
    char college_name[100];
    char student_name[100];
    int roll_no;
    int phone_no;
    char student_address[100];
};
int main()
{
    int n;
    printf("the number of the student Details to Entered"\n);
    scanf("%d",&n);
    
    for(int i=0;i<n;i++)
    {
        printf("----------Enter the college_name:------\n");
        printf("%s",strcpy(std.college_name[i]));
        
    }
    }

====================================================================
#include <stdio.h>
#include <string.h>

struct college
{
    char college_name[100];
    char student_name[100];
    int roll_no;
    int phone_no;
    char student_address[100];
};

int main()
{
    int n;
    printf("Enter the number of students: ");
    scanf("%d", &n);

    struct college std[n]; // Declare an array of structures to store multiple student details

    for (int i = 0; i < n; i++)
    {
        printf("Enter college name for student %d: ", i + 1);
        scanf("%s", std[i].college_name); // Input college name directly into college_name member of the structure
        
        printf("Enter student name for student %d: ", i + 1);
        scanf("%s", std[i].student_name); // Input student name
        
        printf("Enter roll number for student %d: ", i + 1);
        scanf("%d", &std[i].roll_no); // Input roll number
        
        printf("Enter phone number for student %d: ", i + 1);
        scanf("%d", &std[i].phone_no); // Input phone number
        
        printf("Enter address for student %d: ", i + 1);
        scanf("%s", std[i].student_address); // Input address
    }
===============================================================================
#include <stdio.h>

int main() {
  int i, j;
  int row = 2;
  int col = 2;
  int array [2] [2] = {{2, 3}, {4, 5}};
  
  int array2 [2] [2] ={{6,7}, {8,9}};
  
  int array3[2][2] = array[2][2] * array2[2][2];
  
  for (i = 0; i < row; i++) {
    for (j = 0; j < col; j++)
    {
      printf(" %d", array[i][j]);
    }
    printf("\n");
  }
  for (i = 0; i < row; i++) {
    for (j = 0; j < col; j++)
    {
      printf(" %d", array2[i][j]);
    }
    printf("\n");
  }
  printf("the multipacation 2 array are :\n");
  for(i=0;i<2;i++)
  {
      for(j=0;j<2;j++)
      {
          printf(" %d",array3[i][j]);
      }
      printf("\n");
  }
  return 0;
}
===================================================

    // Displaying entered details
    printf("\nEntered Details:\n");
    for (int i = 0; i < n; i++)
    {
        printf("Student %d:\n", i + 1);
        printf("College Name: %s\n", std[i].college_name);
        printf("Student Name: %s\n", std[i].student_name);
        printf("Roll Number: %d\n", std[i].roll_no);
        printf("Phone Number: %d\n", std[i].phone_no);
        printf("Address: %s\n", std[i].student_address);
        printf("\n");
    }

    return 0;
================================================
#include <stdio.h>

int main() {
  int i, j;
  int row = 2;
  int col = 2;
  int array [2] [2] = {{2, 3}, {4, 5}};
  
  int array2 [2] [2] ={{6,7}, {8,9}};
  
  int array3[2][2] = array[2][2] * array2[2][2];
  
  for (i = 0; i < row; i++) {
    for (j = 0; j < col; j++)
    {
      printf(" %d", array[i][j]);
    }
    printf("\n");
  }
  for (i = 0; i < row; i++) {
    for (j = 0; j < col; j++)
    {// 1. Write a program in C to input a string and print it.
// #include<stdio.h>
// int main()
// {
//     char string[100]="HAPPY HOLI NYU\n";
//     //input the string ...
//     printf("%s",string);
//   char string2[100];
//   printf("Enter the string:\n");
//   scanf("%s",string);
// }
// 2. Write a program in C to find the length of a string without using library functions.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int length=0;
//     char string[100]="Nayana kolli";
//     for(;string[length]!='\0';length++)
//     {
//       if(string[length]==' ')
//       {
//           printf("%d",length);
//       }
//     }
// }
// int main()
// {
//     char string[100];
//     int count = 0;
//     int i;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the entire line until newline

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] != ' ')
//         {
//             count++;
//         }
//     }

//     printf("The number of characters in the string (excluding spaces): %d\n", count);

//     return 0;
// }
//3. Write a program in C to separate individual characters from a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int sprt=0;
//     char string[100]=" ";
//     printf("enter the string:\n");
//     scanf("%s",string);
//     while(string[sprt]!='\0')
//     {
//         printf(" %c",string[l]);
//         sprt++;
//     }
// }
//4. Write a program in C to print individual characters of a string in reverse order
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     printf("enter the string:\n");
//     scanf("%[^\n]",string);
//     int length=strlen(string);
//     for(int i=0,j=length-i-1;i<j;i++,j--)
//     {
//        if(string[i]==' '||string[i]=="\n")
//        {
//         int temp=string[i];
//         string[i]=string[j];
//         string[j]=temp;
//       }
//    }
//     printf("%s",string);
// }
//5. Write a program in C to count the total number of words in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     char item;
//     int count;
//     printf("Enter the String:\n");
//     scanf("%[^\n]",string);
//     printf("enter the charchteris:\n");
//     scanf(" %c",&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item)
//         {
//             count++;
//         }
//     }
//     printf("the number of charters are repted the gaven  string is: %d",count);
// }
//  6. Write a program in C to compare two strings without using string library functions.
// C program to compare the two strings without using strcmp() function
// #include <stdio.h>
// #define str_size 100 // Declare the maximum size of the string

// // Function to compare two strings
// int test(char* s1, char* s2) {
//     int flag = 0; // Initialize a flag variable to indicate string equality or inequality

//     // Loop to compare characters in the strings until null terminator '\0' is found in both strings
//     while (*s1 != '\0' || *s2 != '\0') {
//         if (*s1 == *s2) { // Check if the characters in both strings are equal
//             s1++; // Move to the next character in the first string
//             s2++; // Move to the next character in the second string
//         } else if ((*s1 == '\0' && *s2 != '\0') || (*s1 != '\0' && *s2 == '\0') || *s1 != *s2) {
//             // Check for cases where one string ends before the other or characters at the same index are not equal
//             flag = 1; // Set the flag to indicate inequality
//             break; // Exit the loop as inequality is found
//         }
//     }
//     return flag; // Return the flag indicating string equality (0) or inequality (1)
// }

// // Main function
// int main(void) {
//     char str1[str_size], str2[str_size]; // Declare character arrays for the two strings
//     int flg = 0; // Initialize a flag variable

//     printf("\nInput the 1st string : ");
//     fgets(str1, sizeof str1, stdin); // Read the first string from the standard input (keyboard)
//     printf("Input the 2nd string : ");
//     fgets(str2, sizeof str2, stdin); // Read the second string from the standard input (keyboard)

//     printf("\nString1: %s", str1); // Display the first string
//     printf("String2: %s", str2); // Display the second string

//     flg = test(str1, str2); // Call the function to compare the strings

//     // Display the comparison result based on the flag value
//     if (flg == 0) {
//         printf("\nStrings are equal.\n");
//     } else if (flg == 1) {
//         printf("\nStrings are not equal.");
//     }

//     return 0; // Return 0 to indicate successful program execution
// } 
//7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     int count;b
//     char item;
//     printf("enter the string:\n");
//     scanf("%s",string);
//     printf("enter the item:\n");
//     scanf('%c',&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item ||string[i]=='0' && string[i]==9 || string[i]=='A' && string[i]=='Z'|| string[i]=='!','@','$','%','^','&','*','(',')' || string[i]=='a' && string[i]=='z')
//         {
//          count++;   
//         }
//     }
//     printf("the item is repeted is:=%d",count);
// }
// }
// anthor logic code =====================
// 7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include <stdio.h>

// int main()
// {
//     char string[100];
//     int count[256] = {0}; // Initialize all counts to 0
//     int i, item;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the string until newline

//     printf("Enter the character to count: ");
//     scanf(" %c", &item); // Read the character to count

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] == item)
//         {
//             count[item]++; // Increment the count for the specified character
//         }
//     }
//     printf("The character '%c' appears %d times in the string.\n", item, count[item]);
//     return 0;
// }
// 8. Write a program in C to copy one string to another string.
// #include<stdio.h>
// int main()
// {
//     int i;int j;
//     char string[100];
//     char string2[00];
//     printf("Enter the string:\n");
//     scanf("%s",string);
//     while(string[i]!='\0')
//     {
//         i++;
//     }
//     while(string[j]!='\0')
//     {
//         string[i]=string2[j];
//         i++;
//         j++;
//     }
//     string[i]!='\0';
//     printf("The copyed string is:%s",string);
// }














      printf(" %d", array2[i][j]);
    }
    printf("\n");
  }
  printf("the multipacation 2 array are :\n");
  for(i=0;i<2;i++)
  {
      for(j=0;j<2;j++)
      {
          printf(" %d",// 1. Write a program in C to input a string and print it.
// #include<stdio.h>
// int main()
// {
//     char string[100]="HAPPY HOLI NYU\n";
//     //input the string ...
//     printf("%s",string);
//   char string2[100];
//   printf("Enter the string:\n");
//   scanf("%s",string);
// }
// 2. Write a program in C to find the length of a string without using library functions.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int length=0;
//     char string[100]="Nayana kolli";
//     for(;string[length]!='\0';length++)
//     {
//       if(string[length]==' ')
//       {
//           printf("%d",length);
//       }
//     }
// }
// int main()
// {
//     char string[100];
//     int count = 0;
//     int i;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the entire line until newline

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] != ' ')
//         {
//             count++;
//         }
//     }

//     printf("The number of characters in the string (excluding spaces): %d\n", count);

//     return 0;
// }
//3. Write a program in C to separate individual characters from a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int sprt=0;
//     char string[100]=" ";
//     printf("enter the string:\n");
//     scanf("%s",string);
//     while(string[sprt]!='\0')
//     {
//         printf(" %c",string[l]);
//         sprt++;
//     }
// }
//4. Write a program in C to print individual characters of a string in reverse order
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     printf("enter the string:\n");
//     scanf("%[^\n]",string);
//     int length=strlen(string);
//     for(int i=0,j=length-i-1;i<j;i++,j--)
//     {
//        if(string[i]==' '||string[i]=="\n")
//        {
//         int temp=string[i];
//         string[i]=string[j];
//         string[j]=temp;
//       }
//    }
//     printf("%s",string);
// }
//5. Write a program in C to count the total number of words in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     char item;
//     int count;
//     printf("Enter the String:\n");
//     scanf("%[^\n]",string);
//     printf("enter the charchteris:\n");
//     scanf(" %c",&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item)
//         {
//             count++;
//         }
//     }
//     printf("the number of charters are repted the gaven  string is: %d",count);
// }
//  6. Write a program in C to compare two strings without using string library functions.
// C program to compare the two strings without using strcmp() function
// #include <stdio.h>
// #define str_size 100 // Declare the maximum size of the string

// // Function to compare two strings
// int test(char* s1, char* s2) {
//     int flag = 0; // Initialize a flag variable to indicate string equality or inequality

//     // Loop to compare characters in the strings until null terminator '\0' is found in both strings
//     while (*s1 != '\0' || *s2 != '\0') {
//         if (*s1 == *s2) { // Check if the characters in both strings are equal
//             s1++; // Move to the next character in the first string
//             s2++; // Move to the next character in the second string
//         } else if ((*s1 == '\0' && *s2 != '\0') || (*s1 != '\0' && *s2 == '\0') || *s1 != *s2) {
//             // Check for cases where one string ends before the other or characters at the same index are not equal
//             flag = 1; // Set the flag to indicate inequality
//             break; // Exit the loop as inequality is found
//         }
//     }
//     return flag; // Return the flag indicating string equality (0) or inequality (1)
// }

// // Main function
// int main(void) {
//     char str1[str_size], str2[str_size]; // Declare character arrays for the two strings
//     int flg = 0; // Initialize a flag variable

//     printf("\nInput the 1st string : ");
//     fgets(str1, sizeof str1, stdin); // Read the first string from the standard input (keyboard)
//     printf("Input the 2nd string : ");
//     fgets(str2, sizeof str2, stdin); // Read the second string from the standard input (keyboard)

//     printf("\nString1: %s", str1); // Display the first string
//     printf("String2: %s", str2); // Display the second string

//     flg = test(str1, str2); // Call the function to compare the strings

//     // Display the comparison result based on the flag value
//     if (flg == 0) {
//         printf("\nStrings are equal.\n");
//     } else if (flg == 1) {
//         printf("\nStrings are not equal.");
//     }

//     return 0; // Return 0 to indicate successful program execution
// } 
//7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     int count;b
//     char item;
//     printf("enter the string:\n");
//     scanf("%s",string);
//     printf("enter the item:\n");
//     scanf('%c',&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item ||string[i]=='0' && string[i]==9 || string[i]=='A' && string[i]=='Z'|| string[i]=='!','@','$','%','^','&','*','(',')' || string[i]=='a' && string[i]=='z')
//         {
//          count++;   
//         }
//     }
//     printf("the item is repeted is:=%d",count);
// }
// }
// anthor logic code =====================
// 7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include <stdio.h>

// int main()
// {
//     char string[100];
//     int count[256] = {0}; // Initialize all counts to 0
//     int i, item;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the string until newline

//     printf("Enter the character to count: ");
//     scanf(" %c", &item); // Read the character to count

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] == item)
//         {
//             count[item]++; // Increment the count for the specified character
//         }
//     }
//     printf("The character '%c' appears %d times in the string.\n", item, count[item]);
//     return 0;
// }
// 8. Write a program in C to copy one string to another string.
// #include<stdio.h>
// int main()
// {
//     int i;int j;
//     char string[100];
//     char string2[00];
//     printf("Enter the string:\n");
//     scanf("%s",string);
//     while(string[i]!='\0')
//     {
//         i++;
//     }
//     while(string[j]!='\0')
//     {
//         string[i]=string2[j];
//         i++;
//         j++;
//     }
//     string[i]!='\0';
//     printf("The copyed string is:%s",string);
// }













// 1. Write a program in C to input a string and print it.
// #include<stdio.h>
// int main()
// {
//     char string[100]="HAPPY HOLI NYU\n";
//     //input the string ...
//     printf("%s",string);
//   char string2[100];
//   printf("Enter the string:\n");
//   scanf("%s",string);
// }
// 2. Write a program in C to find the length of a string without using library functions.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int length=0;
//     char string[100]="Nayana kolli";
//     for(;string[length]!='\0';length++)
//     {
//       if(string[length]==' ')
//       {
//           printf("%d",length);
//       }
//     }
// }
// int main()
// {
//     char string[100];
//     int count = 0;
//     int i;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the entire line until newline

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] != ' ')
//         {
//             count++;
//         }
//     }

//     printf("The number of characters in the string (excluding spaces): %d\n", count);

//     return 0;
// }
//3. Write a program in C to separate individual characters from a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int sprt=0;
//     char string[100]=" ";
//     printf("enter the string:\n");
//     scanf("%s",string);
//     while(string[sprt]!='\0')
//     {
//         printf(" %c",string[l]);
//         sprt++;
//     }
// }
//4. Write a program in C to print individual characters of a string in reverse order
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     printf("enter the string:\n");
//     scanf("%[^\n]",string);
//     int length=strlen(string);
//     for(int i=0,j=length-i-1;i<j;i++,j--)
//     {
//        if(string[i]==' '||string[i]=="\n")
//        {
//         int temp=string[i];
//         string[i]=string[j];
//         string[j]=temp;
//       }
//    }
//     printf("%s",string);
// }
//5. Write a program in C to count the total number of words in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     char item;
//     int count;
//     printf("Enter the String:\n");
//     scanf("%[^\n]",string);
//     printf("enter the charchteris:\n");
//     scanf(" %c",&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item)
//         {
//             count++;
//         }
//     }
//     printf("the number of charters are repted the gaven  string is: %d",count);
// }
//  6. Write a program in C to compare two strings without using string library functions.
// C program to compare the two strings without using strcmp() function
// #include <stdio.h>
// #define str_size 100 // Declare the maximum size of the string

// // Function to compare two strings
// int test(char* s1, char* s2) {
//     int flag = 0; // Initialize a flag variable to indicate string equality or inequality

//     // Loop to compare characters in the strings until null terminator '\0' is found in both strings
//     while (*s1 != '\0' || *s2 != '\0') {
//         if (*s1 == *s2) { // Check if the characters in both strings are equal
//             s1++; // Move to the next character in the first string
//             s2++; // Move to the next character in the second string
//         } else if ((*s1 == '\0' && *s2 != '\0') || (*s1 != '\0' && *s2 == '\0') || *s1 != *s2) {
//             // Check for cases where one string ends before the other or characters at the same index are not equal
//             flag = 1; // Set the flag to indicate inequality
//             break; // Exit the loop as inequality is found
//         }
//     }
//     return flag; // Return the flag indicating string equality (0) or inequality (1)
// }

// // Main function
// int main(void) {
//     char str1[str_size], str2[str_size]; // Declare character arrays for the two strings
//     int flg = 0; // Initialize a flag variable

//     printf("\nInput the 1st string : ");
//     fgets(str1, sizeof str1, stdin); // Read the first string from the standard input (keyboard)
//     printf("Input the 2nd string : ");
//     fgets(str2, sizeof str2, stdin); // Read the second string from the standard input (keyboard)

//     printf("\nString1: %s", str1); // Display the first string
//     printf("String2: %s", str2); // Display the second string

//     flg = test(str1, str2); // Call the function to compare the strings

//     // Display the comparison result based on the flag value
//     if (flg == 0) {
//         printf("\nStrings are equal.\n");
//     } else if (flg == 1) {
//         printf("\nStrings are not equal.");
//     }

//     return 0; // Return 0 to indicate successful program execution
// } 
//7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     int count;b
//     char item;
//     printf("enter the string:\n");
//     scanf("%s",string);
//     printf("enter the item:\n");
//     scanf('%c',&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item ||string[i]=='0' && string[i]==9 || string[i]=='A' && string[i]=='Z'|| string[i]=='!','@','$','%','^','&','*','(',')' || string[i]=='a' && string[i]=='z')
//         {
//          count++;   
//         }
//     }
//     printf("the item is repeted is:=%d",count);
// }
// }
// anthor logic code =====================
// 7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include <stdio.h>

// int main()
// {
//     char string[100];
//     int count[256] = {0}; // Initialize all counts to 0
//     int i, item;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the string until newline

//     printf("Enter the character to count: ");
//     scanf(" %c", &item); // Read the character to count

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] == item)
//         {
//             count[item]++; // Increment the count for the specified character
//         }
//     }
//     printf("The character '%c' appears %d times in the string.\n", item, count[item]);
//     return 0;
// }
// 8. Write a program in C to copy one string to another string.
// #include<stdio.h>
// int main()
// {
//     int i;int j;
//     char string[100];
//     char string2[00];
//     printf("Enter the string:\n");
//     scanf("%s",string);
//     while(string[i]!='\0')
//     {
//         i++;
//     }
//     while(string[j]!='\0')
//     {
//         string[i]=string2[j];
//         i++;
//         j++;
//     }
//     string[i]!='\0';
//     printf("The copyed string is:%s",string);
// }













array3[i][j]);
      }
      printf("\n");
  }
  return 0;
}
==================================================
#include <stdio.h>

int main() {
  int i, j;
  int row = 2;
  int col = 2;
  int array [2] [2] = {{2, 3}, {4, 5}};
  
  int array2 [2] [2] ={{6,7}, {8,9}};
  
  int array3[2][2] = array[2][2] * array2[2][2];
  
  for (i = 0; i < row; i++) {
    for (j = 0; j < col; j++)
    {
      printf(" %d", array[i][j]);
    }
    printf("\n");// 1. Write a program in C to input a string and print it.
// #include<stdio.h>
// int main()
// {
//     char string[100]="HAPPY HOLI NYU\n";
//     //input the string ...
//     printf("%s",string);
//   char string2[100];
//   printf("Enter the string:\n");
//   scanf("%s",string);
// }
// 2. Write a program in C to find the length of a string without using library functions.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int length=0;
//     char string[100]="Nayana kolli";
//     for(;string[length]!='\0';length++)
//     {
//       if(string[length]==' ')
//       {
//           printf("%d",length);
//       }
//     }
// }
// int main()
// {
//     char string[100];
//     int count = 0;
//     int i;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the entire line until newline

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] != ' ')
//         {
//             count++;
//         }
//     }

//     printf("The number of characters in the string (excluding spaces): %d\n", count);

//     return 0;
// }
//3. Write a program in C to separate individual characters from a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int sprt=0;
//     char string[100]=" ";
//     printf("enter the string:\n");
//     scanf("%s",string);
//     while(string[sprt]!='\0')
//     {
//         printf(" %c",string[l]);
//         sprt++;
//     }
// }
//4. Write a program in C to print individual characters of a string in reverse order
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     printf("enter the string:\n");
//     scanf("%[^\n]",string);
//     int length=strlen(string);
//     for(int i=0,j=length-i-1;i<j;i++,j--)
//     {
//        if(string[i]==' '||string[i]=="\n")
//        {
//         int temp=string[i];
//         string[i]=string[j];
//         string[j]=temp;
//       }
//    }
//     printf("%s",string);
// }
//5. Write a program in C to count the total number of words in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     char item;
//     int count;
//     printf("Enter the String:\n");
//     scanf("%[^\n]",string);
//     printf("enter the charchteris:\n");
//     scanf(" %c",&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item)
//         {
//             count++;
//         }
//     }
//     printf("the number of charters are repted the gaven  string is: %d",count);
// }
//  6. Write a program in C to compare two strings without using string library functions.
// C program to compare the two strings without using strcmp() function
// #include <stdio.h>
// #define str_size 100 // Declare the maximum size of the string

// // Function to compare two strings
// int test(char* s1, char* s2) {
//     int flag = 0; // Initialize a flag variable to indicate string equality or inequality

//     // Loop to compare characters in the strings until null terminator '\0' is found in both strings
//     while (*s1 != '\0' || *s2 != '\0') {
//         if (*s1 == *s2) { // Check if the characters in both strings are equal
//             s1++; // Move to the next character in the first string
//             s2++; // Move to the next character in the second string
//         } else if ((*s1 == '\0' && *s2 != '\0') || (*s1 != '\0' && *s2 == '\0') || *s1 != *s2) {
//             // Check for cases where one string ends before the other or characters at the same index are not equal
//             flag = 1; // Set the flag to indicate inequality
//             break; // Exit the loop as inequality is found
//         }
//     }
//     return flag; // Return the flag indicating string equality (0) or inequality (1)
// }

// // Main function
// int main(void) {
//     char str1[str_size], str2[str_size]; // Declare character arrays for the two strings
//     int flg = 0; // Initialize a flag variable

//     printf("\nInput the 1st string : ");
//     fgets(str1, sizeof str1, stdin); // Read the first string from the standard input (keyboard)
//     printf("Input the 2nd string : ");
//     fgets(str2, sizeof str2, stdin); // Read the second string from the standard input (keyboard)

//     printf("\nString1: %s", str1); // Display the first string
//     printf("String2: %s", str2); // Display the second string

//     flg = test(str1, str2); // Call the function to compare the strings

//     // Display the comparison result based on the flag value
//     if (flg == 0) {
//         printf("\nStrings are equal.\n");
//     } else if (flg == 1) {
//         printf("\nStrings are not equal.");
//     }

//     return 0; // Return 0 to indicate successful program execution
// } 
//7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     int count;b
//     char item;
//     printf("enter the string:\n");
//     scanf("%s",string);
//     printf("enter the item:\n");
//     scanf('%c',&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item ||string[i]=='0' && string[i]==9 || string[i]=='A' && string[i]=='Z'|| string[i]=='!','@','$','%','^','&','*','(',')' || string[i]=='a' && string[i]=='z')
//         {
//          count++;   
//         }
//     }
//     printf("the item is repeted is:=%d",count);
// }
// }
// anthor logic code =====================
// 7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include <stdio.h>

// int main()
// {
//     char string[100];
//     int count[256] = {0}; // Initialize all counts to 0
//     int i, item;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the string until newline

//     printf("Enter the character to count: ");
//     scanf(" %c", &item); // Read the character to count

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] == item)
//         {
//             count[item]++; // Increment the count for the specified character
//         }
//     }
//     printf("The character '%c' appears %d times in the string.\n", item, count[item]);
//     return 0;
// }
// 8. Write a program in C to copy one string to another string.
// #include<stdio.h>
// int main()
// {
//     int i;int j;
//     char string[100];
//     char string2[00];
//     printf("Enter the string:\n");
//     scanf("%s",string);
//     while(string[i]!='\0')
//     {
//         i++;
//     }
//     while(string[j]!='\0')
//     {
//         string[i]=string2[j];
//         i++;
//         j++;
//     }
//     string[i]!='\0';
//     printf("The copyed string is:%s",string);
// }














  }
  for (i = 0; i < row; i++) {
    for (j = 0; j < col; j++)
    {
      printf(" %d", array2[i][j]);
    }
    printf("\n");
  }
  printf("the multipacation 2 array are :\n");
  for(i=0;i<2;i++)
  {
      for(j=0;j<2;j++)
      {
          printf(" %d",array3[i][j]);
      }
      printf("\n");
  }
  return 0;// 1. Write a program in C to input a string and print it.
// #include<stdio.h>
// int main()
// {
//     char string[100]="HAPPY HOLI NYU\n";
//     //input the string ...
//     printf("%s",string);
//   char string2[100];
//   printf("Enter the string:\n");
//   scanf("%s",string);
// }
// 2. Write a program in C to find the length of a string without using library functions.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int length=0;
//     char string[100]="Nayana kolli";
//     for(;string[length]!='\0';length++)
//     {
//       if(string[length]==' ')
//       {
//           printf("%d",length);
//       }
//     }
// }
// int main()
// {
//     char string[100];
//     int count = 0;
//     int i;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the entire line until newline

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] != ' ')
//         {
//             count++;
//         }
//     }

//     printf("The number of characters in the string (excluding spaces): %d\n", count);

//     return 0;
// }
//3. Write a program in C to separate individual characters from a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int sprt=0;
//     char string[100]=" ";
//     printf("enter the string:\n");
//     scanf("%s",string);
//     while(string[sprt]!='\0')
//     {
//         printf(" %c",string[l]);
//         sprt++;
//     }
// }
//4. Write a program in C to print individual characters of a string in reverse order
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     printf("enter the string:\n");
//     scanf("%[^\n]",string);
//     int length=strlen(string);
//     for(int i=0,j=length-i-1;i<j;i++,j--)
//     {
//        if(string[i]==' '||string[i]=="\n")
//        {
//         int temp=string[i];
//         string[i]=string[j];
//         string[j]=temp;
//       }
//    }
//     printf("%s",string);
// }
//5. Write a program in C to count the total number of words in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     char item;
//     int count;
//     printf("Enter the String:\n");
//     scanf("%[^\n]",string);
//     printf("enter the charchteris:\n");
//     scanf(" %c",&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item)
//         {
//             count++;
//         }
//     }
//     printf("the number of charters are repted the gaven  string is: %d",count);
// }
//  6. Write a program in C to compare two strings without using string library functions.
// C program to compare the two strings without using strcmp() function
// #include <stdio.h>
// #define str_size 100 // Declare the maximum size of the string

// // Function to compare two strings
// int test(char* s1, char* s2) {
//     int flag = 0; // Initialize a flag variable to indicate string equality or inequality

//     // Loop to compare characters in the strings until null terminator '\0' is found in both strings
//     while (*s1 != '\0' || *s2 != '\0') {
//         if (*s1 == *s2) { // Check if the characters in both strings are equal
//             s1++; // Move to the next character in the first string
//             s2++; // Move to the next character in the second string
//         } else if ((*s1 == '\0' && *s2 != '\0') || (*s1 != '\0' && *s2 == '\0') || *s1 != *s2) {
//             // Check for cases where one string ends before the other or characters at the same index are not equal
//             flag = 1; // Set the flag to indicate inequality
//             break; // Exit the loop as inequality is found
//         }
//     }
//     return flag; // Return the flag indicating string equality (0) or inequality (1)
// }

// // Main function
// int main(void) {
//     char str1[str_size], str2[str_size]; // Declare character arrays for the two strings
//     int flg = 0; // Initialize a flag variable

//     printf("\nInput the 1st string : ");
//     fgets(str1, sizeof str1, stdin); // Read the first string from the standard input (keyboard)
//     printf("Input the 2nd string : ");
//     fgets(str2, sizeof str2, stdin); // Read the second string from the standard input (keyboard)

//     printf("\nString1: %s", str1); // Display the first string
//     printf("String2: %s", str2); // Display the second string

//     flg = test(str1, str2); // Call the function to compare the strings

//     // Display the comparison result based on the flag value
//     if (flg == 0) {
//         printf("\nStrings are equal.\n");
//     } else if (flg == 1) {
//         printf("\nStrings are not equal.");
//     }

//     return 0; // Return 0 to indicate successful program execution
// } 
//7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     int count;b
//     char item;
//     printf("enter the string:\n");
//     scanf("%s",string);
//     printf("enter the item:\n");
//     scanf('%c',&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item ||string[i]=='0' && string[i]==9 || string[i]=='A' && string[i]=='Z'|| string[i]=='!','@','$','%','^','&','*','(',')' || string[i]=='a' && string[i]=='z')
//         {
//          count++;   
//         }
//     }
//     printf("the item is repeted is:=%d",count);
// }
// }
// anthor logic code =====================
// 7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include <stdio.h>

// int main()
// {
//     char string[100];
//     int count[256] = {0}; // Initialize all counts to 0
//     int i, item;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the string until newline

//     printf("Enter the character to count: ");
//     scanf(" %c", &item); // Read the character to count

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] == item)
//         {
//             count[item]++; // Increment the count for the specified character
//         }
//     }
//     printf("The character '%c' appears %d times in the string.\n", item, count[item]);
//     return 0;
// }
// 8. Write a program in C to copy one string to another string.
// #include<stdio.h>
// int main()
// {
//     int i;int j;
//     char string[100];
//     char string2[00];
//     printf("Enter the string:\n");
//     scanf("%s",string);
//     while(string[i]!='\0')
//     {
//         i++;
//     }
//     while(string[j]!='\0')
//     {
//         string[i]=string2[j];
//         i++;
//         j++;
//     }
//     string[i]!='\0';
//     printf("The copyed string is:%s",string);
// }














}

}
--------------------------------

#include <stdio.h>

int main() {
  int i, j;
  int row = 2;// 1. Write a program in C to input a string and print it.
// #include<stdio.h>
// int main()
// {
//     char string[100]="HAPPY HOLI NYU\n";
//     //input the string ...
//     printf("%s",string);
//   char string2[100];
//   printf("Enter the string:\n");
//   scanf("%s",string);
// }
// 2. Write a program in C to find the length of a string without using library functions.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int length=0;
//     char string[100]="Nayana kolli";
//     for(;string[length]!='\0';length++)
//     {
//       if(string[length]==' ')
//       {
//           printf("%d",length);
//       }
//     }
// }
// int main()
// {
//     char string[100];
//     int count = 0;
//     int i;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the entire line until newline

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] != ' ')
//         {
//             count++;
//         }
//     }

//     printf("The number of characters in the string (excluding spaces): %d\n", count);

//     return 0;
// }
//3. Write a program in C to separate individual characters from a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int sprt=0;
//     char string[100]=" ";
//     printf("enter the string:\n");
//     scanf("%s",string);
//     while(string[sprt]!='\0')
//     {
//         printf(" %c",string[l]);
//         sprt++;
//     }
// }
//4. Write a program in C to print individual characters of a string in reverse order
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     printf("enter the string:\n");
//     scanf("%[^\n]",string);
//     int length=strlen(string);
//     for(int i=0,j=length-i-1;i<j;i++,j--)
//     {
//        if(string[i]==' '||string[i]=="\n")
//        {
//         int temp=string[i];
//         string[i]=string[j];
//         string[j]=temp;
//       }
//    }
//     printf("%s",string);
// }
//5. Write a program in C to count the total number of words in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     char item;
//     int count;
//     printf("Enter the String:\n");
//     scanf("%[^\n]",string);
//     printf("enter the charchteris:\n");
//     scanf(" %c",&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item)
//         {
//             count++;
//         }
//     }
//     printf("the number of charters are repted the gaven  string is: %d",count);
// }
//  6. Write a program in C to compare two strings without using string library functions.
// C program to compare the two strings without using strcmp() function
// #include <stdio.h>
// #define str_size 100 // Declare the maximum size of the string

// // Function to compare two strings
// int test(char* s1, char* s2) {
//     int flag = 0; // Initialize a flag variable to indicate string equality or inequality

//     // Loop to compare characters in the strings until null terminator '\0' is found in both strings
//     while (*s1 != '\0' || *s2 != '\0') {
//         if (*s1 == *s2) { // Check if the characters in both strings are equal
//             s1++; // Move to the next character in the first string
//             s2++; // Move to the next character in the second string
//         } else if ((*s1 == '\0' && *s2 != '\0') || (*s1 != '\0' && *s2 == '\0') || *s1 != *s2) {
//             // Check for cases where one string ends before the other or characters at the same index are not equal
//             flag = 1; // Set the flag to indicate inequality
//             break; // Exit the loop as inequality is found
//         }
//     }
//     return flag; // Return the flag indicating string equality (0) or inequality (1)
// }

// // Main function
// int main(void) {
//     char str1[str_size], str2[str_size]; // Declare character arrays for the two strings
//     int flg = 0; // Initialize a flag variable

//     printf("\nInput the 1st string : ");
//     fgets(str1, sizeof str1, stdin); // Read the first string from the standard input (keyboard)
//     printf("Input the 2nd string : ");
//     fgets(str2, sizeof str2, stdin); // Read the second string from the standard input (keyboard)

//     printf("\nString1: %s", str1); // Display the first string
//     printf("String2: %s", str2); // Display the second string

//     flg = test(str1, str2); // Call the function to compare the strings

//     // Display the comparison result based on the flag value
//     if (flg == 0) {
//         printf("\nStrings are equal.\n");
//     } else if (flg == 1) {
//         printf("\nStrings are not equal.");
//     }

//     return 0; // Return 0 to indicate successful program execution
// } 
//7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     int count;b
//     char item;
//     printf("enter the string:\n");
//     scanf("%s",string);
//     printf("enter the item:\n");
//     scanf('%c',&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item ||string[i]=='0' && string[i]==9 || string[i]=='A' && string[i]=='Z'|| string[i]=='!','@','$','%','^','&','*','(',')' || string[i]=='a' && string[i]=='z')
//         {
//          count++;   
//         }
//     }
//     printf("the item is repeted is:=%d",count);
// }
// }
// anthor logic code =====================
// 7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include <stdio.h>

// int main()
// {
//     char string[100];
//     int count[256] = {0}; // Initialize all counts to 0
//     int i, item;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the string until newline

//     printf("Enter the character to count: ");
//     scanf(" %c", &item); // Read the character to count

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] == item)
//         {
//             count[item]++; // Increment the count for the specified character
//         }
//     }
//     printf("The character '%c' appears %d times in the string.\n", item, count[item]);
//     return 0;
// }
// 8. Write a program in C to copy one string to another string.
// #include<stdio.h>
// int main()
// {
//     int i;int j;
//     char string[100];
//     char string2[00];
//     printf("Enter the string:\n");
//     scanf("%s",string);
//     while(string[i]!='\0')
//     {
//         i++;
//     }
//     while(string[j]!='\0')
//     {
//         string[i]=string2[j];
//         i++;
//         j++;
//     }
//     string[i]!='\0';
//     printf("The copyed string is:%s",string);
// }














  int col = 2;
  int array[row][col] = {{2, 3}, {4, 5}};

  for (i = 0; i < row; i++) {
    for (j = 0; j < col; j++) {
      printf("%d", array[i][j]);
    }
    printf("\n");
  }

  return 0;
}



--------------------------------------
#include <stdio.h>

int main() {
  int i, j;
  int row = 2;// 1. Write a program in C to input a string and print it.
// #include<stdio.h>
// int main()
// {
//     char string[100]="HAPPY HOLI NYU\n";
//     //input the string ...
//     printf("%s",string);
//   char string2[100];
//   printf("Enter the string:\n");
//   scanf("%s",string);
// }
// 2. Write a program in C to find the length of a string without using library functions.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int length=0;
//     char string[100]="Nayana kolli";
//     for(;string[length]!='\0';length++)
//     {
//       if(string[length]==' ')
//       {
//           printf("%d",length);
//       }
//     }
// }
// int main()
// {
//     char string[100];
//     int count = 0;
//     int i;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the entire line until newline

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] != ' ')
//         {
//             count++;
//         }
//     }

//     printf("The number of characters in the string (excluding spaces): %d\n", count);

//     return 0;
// }
//3. Write a program in C to separate individual characters from a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int sprt=0;
//     char string[100]=" ";
//     printf("enter the string:\n");
//     scanf("%s",string);
//     while(string[sprt]!='\0')
//     {
//         printf(" %c",string[l]);
//         sprt++;
//     }
// }
//4. Write a program in C to print individual characters of a string in reverse order
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     printf("enter the string:\n");
//     scanf("%[^\n]",string);
//     int length=strlen(string);
//     for(int i=0,j=length-i-1;i<j;i++,j--)
//     {
//        if(string[i]==' '||string[i]=="\n")
//        {
//         int temp=string[i];
//         string[i]=string[j];
//         string[j]=temp;
//       }
//    }
//     printf("%s",string);
// }
//5. Write a program in C to count the total number of words in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     char item;
//     int count;
//     printf("Enter the String:\n");
//     scanf("%[^\n]",string);
//     printf("enter the charchteris:\n");
//     scanf(" %c",&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item)
//         {
//             count++;
//         }
//     }
//     printf("the number of charters are repted the gaven  string is: %d",count);
// }
//  6. Write a program in C to compare two strings without using string library functions.
// C program to compare the two strings without using strcmp() function
// #include <stdio.h>
// #define str_size 100 // Declare the maximum size of the string

// // Function to compare two strings
// int test(char* s1, char* s2) {
//     int flag = 0; // Initialize a flag variable to indicate string equality or inequality

//     // Loop to compare characters in the strings until null terminator '\0' is found in both strings
//     while (*s1 != '\0' || *s2 != '\0') {
//         if (*s1 == *s2) { // Check if the characters in both strings are equal
//             s1++; // Move to the next character in the first string
//             s2++; // Move to the next character in the second string
//         } else if ((*s1 == '\0' && *s2 != '\0') || (*s1 != '\0' && *s2 == '\0') || *s1 != *s2) {
//             // Check for cases where one string ends before the other or characters at the same index are not equal
//             flag = 1; // Set the flag to indicate inequality
//             break; // Exit the loop as inequality is found
//         }
//     }
//     return flag; // Return the flag indicating string equality (0) or inequality (1)
// }

// // Main function
// int main(void) {
//     char str1[str_size], str2[str_size]; // Declare character arrays for the two strings
//     int flg = 0; // Initialize a flag variable

//     printf("\nInput the 1st string : ");
//     fgets(str1, sizeof str1, stdin); // Read the first string from the standard input (keyboard)
//     printf("Input the 2nd string : ");
//     fgets(str2, sizeof str2, stdin); // Read the second string from the standard input (keyboard)

//     printf("\nString1: %s", str1); // Display the first string
//     printf("String2: %s", str2); // Display the second string

//     flg = test(str1, str2); // Call the function to compare the strings

//     // Display the comparison result based on the flag value
//     if (flg == 0) {
//         printf("\nStrings are equal.\n");
//     } else if (flg == 1) {
//         printf("\nStrings are not equal.");
//     }

//     return 0; // Return 0 to indicate successful program execution
// } 
//7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     int count;b
//     char item;
//     printf("enter the string:\n");
//     scanf("%s",string);
//     printf("enter the item:\n");
//     scanf('%c',&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item ||string[i]=='0' && string[i]==9 || string[i]=='A' && string[i]=='Z'|| string[i]=='!','@','$','%','^','&','*','(',')' || string[i]=='a' && string[i]=='z')
//         {
//          count++;   
//         }
//     }
//     printf("the item is repeted is:=%d",count);
// }
// }
// anthor logic code =====================
// 7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include <stdio.h>

// int main()
// {
//     char string[100];
//     int count[256] = {0}; // Initialize all counts to 0
//     int i, item;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the string until newline

//     printf("Enter the character to count: ");
//     scanf(" %c", &item); // Read the character to count

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] == item)
//         {
//             count[item]++; // Increment the count for the specified character
//         }
//     }
//     printf("The character '%c' appears %d times in the string.\n", item, count[item]);
//     return 0;
// }
// 8. Write a program in C to copy one string to another string.
// #include<stdio.h>
// int main()
// {
//     int i;int j;
//     char string[100];
//     char string2[00];
//     printf("Enter the string:\n");
//     scanf("%s",string);
//     while(string[i]!='\0')
//     {
//         i++;
//     }
//     while(string[j]!='\0')
//     {
//         string[i]=string2[j];
//         i++;
//         j++;
//     }
//     string[i]!='\0';
//     printf("The copyed string is:%s",string);
// }














  int col = 2;
  int array [2] [2] = {{2, 3}, {4, 5}};
  
  int array2 [2] [2] ={{6,7}, {8,9}};
  
  int array3[2][2] = array[2][2] * array2[2][2];
  
  for (i = 0; i < row; i++) {
    for (j = 0; j < col; j++)
    {
      printf(" %d", array[i][j]);
    }
    printf("\n");
  }
  for (i = 0; i < row; i++) {
    for (j = 0; j < col; j++)
    {
      printf(" %d", array2[i][j]);
    }
    printf("\n");
  }
  printf("the multipacation 2 array are :\n");
  for(i=0;i<2;i++)
  {
      for(j=0;j<2;j++)
      {
          printf(" %d",array3[i][j]);
      }
      printf("\n");
  }
  return 0;
}

------------------------------------------------------------------------------------------------
#include<stdio.h>
int main()
{
    int num;
    printf("enter the number:\n");
    scanf("%d",&num);
    int result=((num &0x0F)>> 4)| ((num&0x0F)<< 4);
    printf("%d ",result);
}

------------------------------------------------------
// 7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
#include<stdio.h>
#include<string.h>
int main()
{
    char string[100];
    int count;b
    char item;
    printf("enter the string:\n");
    scanf("%s",string);
    printf("enter the item:\n");
    scanf('%c',&item);
    for(int i=0;string[i]!='\0';i++)
    {
        if(string[i]==item ||string[i]=='0' && string[i]==9 || string[i]=='A' && string[i]=='Z'|| string[i]=='!','@','$','%','^','&','*','(',')' || string[i]=='a' && string[i]=='z')
        {
         count++;   
        }
    }
    printf("the item // 1. Write a program in C to input a string and print it.
// #include<stdio.h>
// int main()
// {
//     char string[100]="HAPPY HOLI NYU\n";
//     //input the string ...
//     printf("%s",string);
//   char string2[100];
//   printf("Enter the string:\n");
//   scanf("%s",string);
// }
// 2. Write a program in C to find the length of a string without using library functions.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int length=0;
//     char string[100]="Nayana kolli";
//     for(;string[length]!='\0';length++)
//     {
//       if(string[length]==' ')
//       {
//           printf("%d",length);
//       }
//     }
// }
// int main()
// {
//     char string[100];
//     int count = 0;
//     int i;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the entire line until newline

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] != ' ')
//         {
//             count++;
//         }
//     }

//     printf("The number of characters in the string (excluding spaces): %d\n", count);

//     return 0;
// }
//3. Write a program in C to separate individual characters from a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int sprt=0;
//     char string[100]=" ";
//     printf("enter the string:\n");
//     scanf("%s",string);
//     while(string[sprt]!='\0')
//     {
//         printf(" %c",string[l]);
//         sprt++;
//     }
// }
//4. Write a program in C to print individual characters of a string in reverse order
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     printf("enter the string:\n");
//     scanf("%[^\n]",string);
//     int length=strlen(string);
//     for(int i=0,j=length-i-1;i<j;i++,j--)
//     {
//        if(string[i]==' '||string[i]=="\n")
//        {
//         int temp=string[i];
//         string[i]=string[j];
//         string[j]=temp;
//       }
//    }
//     printf("%s",string);
// }
//5. Write a program in C to count the total number of words in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     char item;
//     int count;
//     printf("Enter the String:\n");
//     scanf("%[^\n]",string);
//     printf("enter the charchteris:\n");
//     scanf(" %c",&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item)
//         {
//             count++;
//         }
//     }
//     printf("the number of charters are repted the gaven  string is: %d",count);
// }
//  6. Write a program in C to compare two strings without using string library functions.
// C program to compare the two strings without using strcmp() function
// #include <stdio.h>
// #define str_size 100 // Declare the maximum size of the string

// // Function to compare two strings
// int test(char* s1, char* s2) {
//     int flag = 0; // Initialize a flag variable to indicate string equality or inequality

//     // Loop to compare characters in the strings until null terminator '\0' is found in both strings
//     while (*s1 != '\0' || *s2 != '\0') {
//         if (*s1 == *s2) { // Check if the characters in both strings are equal
//             s1++; // Move to the next character in the first string
//             s2++; // Move to the next character in the second string
//         } else if ((*s1 == '\0' && *s2 != '\0') || (*s1 != '\0' && *s2 == '\0') || *s1 != *s2) {
//             // Check for cases where one string ends before the other or characters at the same index are not equal
//             flag = 1; // Set the flag to indicate inequality
//             break; // Exit the loop as inequality is found
//         }
//     }
//     return flag; // Return the flag indicating string equality (0) or inequality (1)
// }

// // Main function
// int main(void) {
//     char str1[str_size], str2[str_size]; // Declare character arrays for the two strings
//     int flg = 0; // Initialize a flag variable

//     printf("\nInput the 1st string : ");
//     fgets(str1, sizeof str1, stdin); // Read the first string from the standard input (keyboard)
//     printf("Input the 2nd string : ");
//     fgets(str2, sizeof str2, stdin); // Read the second string from the standard input (keyboard)

//     printf("\nString1: %s", str1); // Display the first string
//     printf("String2: %s", str2); // Display the second string

//     flg = test(str1, str2); // Call the function to compare the strings

//     // Display the comparison result based on the flag value
//     if (flg == 0) {
//         printf("\nStrings are equal.\n");
//     } else if (flg == 1) {
//         printf("\nStrings are not equal.");
//     }

//     return 0; // Return 0 to indicate successful program execution
// } 
//7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     int count;b
//     char item;
//     printf("enter the string:\n");
//     scanf("%s",string);
//     printf("enter the item:\n");
//     scanf('%c',&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item ||string[i]=='0' && string[i]==9 || string[i]=='A' && string[i]=='Z'|| string[i]=='!','@','$','%','^','&','*','(',')' || string[i]=='a' && string[i]=='z')
//         {
//          count++;   
//         }
//     }
//     printf("the item is repeted is:=%d",count);
// }
// }
// anthor logic code =====================
// 7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include <stdio.h>

// int main()
// {
//     char string[100];
//     int count[256] = {0}; // Initialize all counts to 0
//     int i, item;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the string until newline

//     printf("Enter the character to count: ");
//     scanf(" %c", &item); // Read the character to count

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] == item)
//         {
//             count[item]++; // Increment the count for the specified character
//         }
//     }
//     printf("The character '%c' appears %d times in the string.\n", item, count[item]);
//     return 0;
// }
// 8. Write a program in C to copy one string to another string.
// #include<stdio.h>
// int main()
// {
//     int i;int j;
//     char string[100];
//     char string2[00];
//     printf("Enter the string:\n");
//     scanf("%s",string);
//     while(string[i]!='\0')
//     {
//         i++;
//     }
//     while(string[j]!='\0')
//     {
//         string[i]=string2[j];
//         i++;
//         j++;
//     }
//     string[i]!='\0';
//     printf("The copyed string is:%s",string);
// }

is repeted is:=%d",count);
}
}







// 1. Write a program in C to input a string and print it.
// #include<stdio.h>
// int main()
// {
//     char string[100]="HAPPY HOLI NYU\n";
//     //input the string ...
//     printf("%s",string);
//   char string2[100];
//   printf("Enter the string:\n");
//   scanf("%s",string);
// }
// 2. Write a program in C to find the length of a string without using library functions.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int length=0;
//     char string[100]="Nayana kolli";
//     for(;string[length]!='\0';length++)
//     {
//       if(string[length]==' ')
//       {
//           printf("%d",length);
//       }
//     }
// }
// int main()
// {
//     char string[100];
//     int count = 0;
//     int i;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the entire line until newline

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] != ' ')
//         {
//             count++;
//         }
//     }

//     printf("The number of characters in the string (excluding spaces): %d\n", count);

//     return 0;
// }
//3. Write a program in C to separate individual characters from a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     int sprt=0;
//     char string[100]=" ";
//     printf("enter the string:\n");
//     scanf("%s",string);
//     while(string[sprt]!='\0')
//     {
//         printf(" %c",string[l]);
//         sprt++;
//     }
// }
//4. Write a program in C to print individual characters of a string in reverse order
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     printf("enter the string:\n");
//     scanf("%[^\n]",string);
//     int length=strlen(string);
//     for(int i=0,j=length-i-1;i<j;i++,j--)
//     {
//        if(string[i]==' '||string[i]=="\n")
//        {
//         int temp=string[i];
//         string[i]=string[j];
//         string[j]=temp;
//       }
//    }
//     printf("%s",string);
// }
//5. Write a program in C to count the total number of words in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     char item;
//     int count;
//     printf("Enter the String:\n");
//     scanf("%[^\n]",string);
//     printf("enter the charchteris:\n");
//     scanf(" %c",&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item)
//         {
//             count++;
//         }
//     }
//     printf("the number of charters are repted the gaven  string is: %d",count);
// }
//  6. Write a program in C to compare two strings without using string library functions.
// C program to compare the two strings without using strcmp() function
// #include <stdio.h>
// #define str_size 100 // Declare the maximum size of the string

// // Function to compare two strings
// int test(char* s1, char* s2) {
//     int flag = 0; // Initialize a flag variable to indicate string equality or inequality

//     // Loop to compare characters in the strings until null terminator '\0' is found in both strings
//     while (*s1 != '\0' || *s2 != '\0') {
//         if (*s1 == *s2) { // Check if the characters in both strings are equal
//             s1++; // Move to the next character in the first string
//             s2++; // Move to the next character in the second string
//         } else if ((*s1 == '\0' && *s2 != '\0') || (*s1 != '\0' && *s2 == '\0') || *s1 != *s2) {
//             // Check for cases where one string ends before the other or characters at the same index are not equal
//             flag = 1; // Set the flag to indicate inequality
//             break; // Exit the loop as inequality is found
//         }
//     }
//     return flag; // Return the flag indicating string equality (0) or inequality (1)
// }

// // Main function
// int main(void) {
//     char str1[str_size], str2[str_size]; // Declare character arrays for the two strings
//     int flg = 0; // Initialize a flag variable

//     printf("\nInput the 1st string : ");
//     fgets(str1, sizeof str1, stdin); // Read the first string from the standard input (keyboard)
//     printf("Input the 2nd string : ");
//     fgets(str2, sizeof str2, stdin); // Read the second string from the standard input (keyboard)

//     printf("\nString1: %s", str1); // Display the first string
//     printf("String2: %s", str2); // Display the second string

//     flg = test(str1, str2); // Call the function to compare the strings

//     // Display the comparison result based on the flag value
//     if (flg == 0) {
//         printf("\nStrings are equal.\n");
//     } else if (flg == 1) {
//         printf("\nStrings are not equal.");
//     }

//     return 0; // Return 0 to indicate successful program execution
// } 
//7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include<stdio.h>
// #include<string.h>
// int main()
// {
//     char string[100];
//     int count;b
//     char item;
//     printf("enter the string:\n");
//     scanf("%s",string);
//     printf("enter the item:\n");
//     scanf('%c',&item);
//     for(int i=0;string[i]!='\0';i++)
//     {
//         if(string[i]==item ||string[i]=='0' && string[i]==9 || string[i]=='A' && string[i]=='Z'|| string[i]=='!','@','$','%','^','&','*','(',')' || string[i]=='a' && string[i]=='z')
//         {
//          count++;   
//         }
//     }
//     printf("the item is repeted is:=%d",count);
// }
// }
// anthor logic code =====================
// 7. Write a program in C to count the total number of alphabets, digits and special characters in a string.
// #include <stdio.h>

// int main()
// {
//     char string[100];
//     int count[256] = {0}; // Initialize all counts to 0
//     int i, item;

//     printf("Enter the string: ");
//     scanf("%[^\n]", string); // Read the string until newline

//     printf("Enter the character to count: ");
//     scanf(" %c", &item); // Read the character to count

//     for (i = 0; string[i] != '\0'; i++)
//     {
//         if (string[i] == item)
//         {
//             count[item]++; // Increment the count for the specified character
//         }
//     }
//     printf("The character '%c' appears %d times in the string.\n", item, count[item]);
//     return 0;
// }
// 8. Write a program in C to copy one string to another string.
// #include<stdio.h>
// int main()
// {
//     int i;int j;
//     char string[100];
//     char string2[00];
//     printf("Enter the string:\n");
//     scanf("%s",string);
//     while(string[i]!='\0')
//     {
//         i++;
//     }
//     while(string[j]!='\0')
//     {
//         string[i]=string2[j];
//         i++;
//         j++;
//     }
//     string[i]!='\0';
//     printf("The copyed string is:%s",string);
// }
==============================================================eeeeeeeeeeeeeeeeeeeerrrrrrrrrrrrrrrrrrrrrrrrrrrrrrreeeeeeeeeeeeeeeooor
// 9. Write a program in C to count the total number of vowels or consonants in a string.
#include<stdio.h>
int main()
{
    int i=0;
    char string[100];
    char vowels[10]={0};
    int count,item;
    char consonants[50]={0};
    printf("Enter the string:\n");
    scanf("%s",string);
    printf("Enter the charter:\n");
    scanf("%s",&item);
    for(i=0;string[i]!='\0';i++)
    {
        if(string[i]=='A' && string[i]=='E' && string[i]=='I' &&string[i]=='O' && string[i]=='U' || string[i]=='a' && string[i]=='e' && string[i]=='i' &&string[i]=='o' && string[i]=='u')
        {
          count[vowels]++;
        }
        if else(string[i]=='A' && string[i]=='Z'||string[i]=='a' && string[i]=='z')
        {
            count[consonants]++;
        }
    }
    printf("the char %c in vowels are %d :",item,count);
    printf("the char %c in vowels are %d :",item,count);
    
/////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
#include <stdio.h>

int main() {
    int i = 0;
    char string[100];
    int count = 0;
    char item;
    int vowels_count = 0;
    int consonants_count = 0;

    printf("Enter the string:\n");
    scanf("%s", string);
    printf("Enter the character:\n");
    scanf(" %c", &item);

    for (i = 0; string[i] != '\0'; i++) {
        char ch = string[i];

        if ((ch >= 'A' && ch <= 'Z') || (ch >= 'a' && ch <= 'z')) {
            if (ch == 'A' || ch == 'E' || ch == 'I' || ch == 'O' || ch == 'U' || 
                ch == 'a' || ch == 'e' || ch == 'i' || ch == 'o' || ch == 'u') {
                vowels_count++;
            } else {
                consonants_count++;
            }
        }
    }

    printf("The character '%c' appears %d times in vowels.\n", item, vowels_count);
    printf("The character '%c' appears %d times in consonants.\n", item, consonants_count);

    return 0;
}

--------------------------------------------------------------------------[
#include<stdio.h>

int main() {
    char string[100];
    int count[256] = {0};
    printf("Enter the string:\n");
    scanf("%s", string);

    // Count occurrences of each character in the string
    int i = 0;
    while (string[i] != '\0') {
        count[string[i]]++;
        i++;
    }

    int hig = 0;
    char max_char;
    for (i = 0; i < 256; i++) {
        if (count[i] > hig) {
            hig = count[i];
            max_char = i;
        }
    }

    printf("Character with highest frequency: '%c'\n", max_char);
    printf("Frequency: %d\n", hig);

    return 0;
}
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
//sort the array.................>
// #include<stdio.h>
// #include<string.h>

// int main() {
//     char string[100];
//     int i, j;
//     printf("Enter the string:\n");
//     scanf("%s", string);

//     // Sorting the string in ascending order
//     int length = strlen(string);
//     for (i = 0; i < length - 1; i++) {
//         for (j = i + 1; j < length; j++) {
//             if (string[i] > string[j]) {
//                 char temp = string[i];
//                 string[i] = string[j];
//                 string[j] = temp;
//             }
//         }
//     }
//     printf("The sorted string is:\n%s\n", string);

//     return 0;
// }


// // userinput with input 

// #include <stdio.h>
// #include <string.h>

// int main() {
//     char name[25][50], temp[25]; // Declares an array of strings and a temporary string
//     int n, i, j; // Declare variables for number of strings and iteration

//     printf("\n\nSorts the strings of an array using bubble sort :\n"); // Display information about the task
//     printf("-----------------------------------------------------\n");

//     printf("Input number of strings: ");
//     scanf("%d", &n); // Read the number of strings from the user

//     printf("Input string %d :\n", n);
//     for (i = 0; i <= n; i++) {
//         fgets(name[i], sizeof(name[i]), stdin); // Read strings from the user
//     }

//     /* Logic for Bubble Sort */
//     for (i = 1; i <= n; i++) {
//         for (j = 0; j <= n - i; j++) {
//             if (strcmp(name[j], name[j + 1]) > 0) { // Compare adjacent strings
//                 strcpy(temp, name[j]); // Swap strings using temporary variable
//                 strcpy(name[j], name[j + 1]);
//                 strcpy(name[j + 1], temp);
//             }
//         }
//     }

//     printf("The strings appear after sorting:\n"); // Display the sorted strings
//     for (i = 0; i <= n; i++) {
//         printf("%s\n", name[i]);
		
// 	return 0; // Return 0 to indicate successful execution of the program
//     }
// }
// 13. Write a program in C to extract a substring from a given string.

// Test Data :-----------------------------------------------------
// Input the string : this is test string
// Input the position to start extraction :9
// Input the length of substring :4
//=================================================================
// Expected Output :
// The substring retrieve from the string is : " test "
===================================================================
// #include<stdio.h>
// int main()
// {
//     char string[100];
//     int i;
//     printf("Enter the string:\n");
//     scanf("%[^\n]",string);
//     int srtpos,endpos;
//     printf("Enter the starting position:\n");
//     scanf("%d",&srtpos);
//     printf("Enter the Ending position:\n");
//     scanf("%d",&endpos);
//     while(string[i]!='\0')
//     {
//         if(string[i]==srtpos && string[i]==endpos)
//         {
            
//         }
//         i++;
//     }
//     printf("The substring is",substring);
// }
// anthor logic is =======================================================
// #include<stdio.h>

// int main() {
//     int srtpos, length;
//     char string[100] = "this is test string";
//     char substring[100];
//     // Input the starting position and length of substring
//     printf("Input the position to start extraction: ");
//     scanf("%d", &srtpos);
//     printf("Input the length of substring: ");
//     scanf("%d", &length);
//     // Extracting the substring
//     int i, j = 0;
//     for (i = srtpos - 1; i < srtpos - 1 + length; i++) {
//         substring[j] = string[i];
//         j++;
//     }
//     substring[j] = '\0'; // Null-terminate the substring
//     // Print the extracted substring
//     printf("The substring retrieved from the string is: \"%s\"\n", substring);
//     return 0;
-----------------------------------------------------// }
//in the gave string u need to find substring................>
// #include <stdio.h>
// #include <string.h>

// int main() {
//     char string[100];
//     char substr[100];
//     int found = 0;

//     // Input the main string and the substring
//     printf("Enter the Main String:\n");
//     scanf(" %[^\n]", string);
//     printf("Enter the Substring:\n");
//     scanf(" %[^\n]", substr);

//     int length = strlen(string);
//     int sublength = strlen(substr);

//     for (int i = 0; i <= length - sublength; i++) {
//         int j;
//         for (j = 0; j < sublength; j++) {
//             if (string[i + j] != substr[j]) {
//                 break;
//             }
//         }
//         if (j == sublength) { // If the entire substring is matched
//             found = 1;
//             printf("Substring found at index %d\n", i);
//         }
//     }

//     if (!found) {
//         printf("Substring not found\n");
//     }
//     return 0;
// }
// 15. Write a program in C to read a sentence and replace lowercase characters with uppercase and vice versa.

// Test Data :
// Input the string : This Is A Test String.

// Expected Output :

// The given sentence is   : This Is A Test String.
// After Case changed the string  is: tHIS iS a tEST sTRING.
// #include <stdio.h>
// #include <stdlib.h> // Needed for malloc
// #include <string.h>

// int main() {
//     char *string = (char *)malloc(100 * sizeof(char));
//     char *substring = (char *)malloc(100 * sizeof(char));

//     printf("Enter the main string: ");
//     scanf("%[^\n]", string); // Read the main string
//     getchar(); // Consume the newline character left in the buffer

//     printf("Enter the substring: ");
//     scanf("%[^\n]", substring); // Read the substring

//     int length = strlen(string);
//     int sublen = strlen(substring);
//     int found = 0; // Variable to track if substring is found

//     for (int i = 0; i <= length - sublen; i++) {
//         int j;
//         for (j = 0; j < sublen; j++) {
//             if (string[i + j] != substring[j]) {
//                 break;
//             }
//         }
//         if (j == sublen) { // If the entire substring is matched
//             found = 1;
//             printf("The substring found at index: %d\n", i);
//             break; // Break out of the outer loop once substring is found
//         }
//     }

//     if (!found) {
//         printf("The substring is not found.\n");
//     }

//     free(string); // Free dynamically allocated memory for string
//     free(substring); // Free dynamically allocated memory for substring

//     return 0;
// }
// gave string to mack uppper case to lowr case in string 
// #include <stdio.h>

// int main() {
//     char string[100];
//     printf("Enter the string:\n");
//     scanf("%[^\n]", string);

//     for (int i = 0; string[i] != '\0'; i++) {
//         if (string[i] >= 'A' && string[i] <= 'Z') {
//             // Convert uppercase letter to lowercase
//             string[i] = string[i] + 32;
//         } else if (string[i] >= 'a' && string[i] <= 'z') {
//             // Convert lowercase letter to uppercase
//             string[i] = string[i] - 32;
//         }
//     }
//     printf("The converted string is: %s\n", string);
//     return 0;
// }
------------------------------------------------------------------------------------------------------------------------
//  16. Write a program in C to find the number of times a given word 'the' appears in the given string.
#include<stdio.h>
#include<string.h>
int main()
{
    int i,j;
    int found=0;
    char string[100];
    printf("enter th string:\n");
    scanf("%[^\n]",string);
    char substring[100]="the";
    int length=strlen(substring);
    int sublength=strlen(substring);
    for(i=0;i<length-sublength;i++)
    {
        for(j=0;j<sublength;j++)
        {
            if(string[i+j]!=substring[j])
            {
                break;
            }
        }
    }
    if(j==sublength)
    {
        found;
        printf("The string found at the index %d:",i);
        printf("the substring is %s",substring);
    }
    if(!found)
    {
        printf("the string is NOT found:\n");
    }
}
    
 




































