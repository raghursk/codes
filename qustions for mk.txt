 1 ) In array of integers as input from the user and finds the second smallest index of an element in the array. However, your program should have a time complexity of O(n), where n is the size of the array, and it should not use any sorting algorithms.
2 ) Is it possible to change the size of an array once it's declared ?
3 ) In string  input is abcd :-- output wellbe bcda--cdab-dabc using 
4 ) what happens if you attempt to perfroms artimatic opt on null opinter ?
5) wrt a program generates two random numbers and a random operation (addition, subtraction, multiplication, or division) and asks the user to solve the expression. It then checks if the user's answer is correct and provides feedback accordingly. 
6) what is deffrence btw bitwise(~) and log(NOT)
   #include <stdio.h>
    int main() {
    int x = 5;
    int bitwise_complement_x = ~x;
    printf("Bitwise complement of %d: %d\n", x, bitwise_complement_x);
    int logical_not_x = !x;
    printf("Logical NOT of %d: %d\n", x, logical_not_x);
    return 0;
}
7 ) sort the array using bitwise opt

#include <stdio.h>
#define size 100
int main(int argc, char *argv[]) {
    int n, revs = 0, rem = 1, sum;

    printf("Enter the number:\n");
    scanf("%d", &n);
    while(n !=0){
    rem = n % 10;
    revs = revs * 10 + rem;
    n /= 10;
}
    printf("%d", revs);
    
    int array[size];
    int temp = revs;
    for(int i=0;i<n;i++)
    {
        int temp=revs;
        revs=array[i];
        array[i]=temp;
        printf("%d",array[i]);
    }
    
    
    
    
    
    
    
    return 0;
}

